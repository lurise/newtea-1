/*
 * @Author: zhaoheng
 * @LastEditors: zhaoheng
 * @Description:
 *    AlloyTeam ESLint 规则
 *    https://alloyteam.github.io/eslint-config-alloy/
 *    @category 此规则属于哪种分类
 *    @reason 为什么要开启（关闭）此规则
 *    @fixable 支持自动修复
 *    eslint使用说明：
 *    Alt+F8查看eslint具体报错
 *    Alt+Shift+F prettier美化代码
 *    建议quickfix
 *  
 * @Date: 2019-06-11 14:05:25
 * @LastEditTime: 2019-06-12 18:09:38
 */
{
  "env": {
    "browser": true,
    "node": true
  },
  "globals": {
    "APP": true,
    "window": true
  },
  "plugins": ["react", "import"],
  "parser": "babel-eslint",
  "parserOptions": {
    "sourceType": "module"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js"]
      }
    }
  },
  "rules": {
    // --zhaoheng add start-- 0612(更多偏向于书写规范)
    /**
     * ${name} 内的首尾禁止有空格
     * @category ECMAScript 6
     * @fixable
     */
    "template-curly-spacing": ["error", "never"],
    /**
     * 禁止重复 import 模块
     * @category ECMAScript 6
     */
    "no-duplicate-imports": "error",
    /**
     * 箭头函数的箭头前后必须有空格
     * @category ECMAScript 6
     * @fixable
     */
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    /**
     * 小括号内的首尾禁止有空格
     * @category Stylistic Issues
     * @fixable
     */
    "space-in-parens": ["error", "never"],
    /**
     * 操作符左右必须有空格
     * @category Stylistic Issues
     * @fixable
     */
    "space-infix-ops": "error",
    /**
     * 注释的斜线或 * 后必须有空格
     * @category Stylistic Issues
     * @fixable
     */
    "spaced-comment": [
      "error",
      "always",
      {
        "block": {
          "exceptions": ["*"],
          "balanced": true
        }
      }
    ],
    /**
     * 一行有多个语句时，分号前面禁止有空格，分号后面必须有空格
     * @category Stylistic Issues
     * @fixable
     */
    "semi-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    /**
     * 使用 ... 而不是 Object.assign
     * @category Stylistic Issues
     * @fixable
     */
    "prefer-object-spread": "error",
    /**
     * 变量申明必须每行一个
     * @category Stylistic Issues
     * @fixable
     */
    "one-var-declaration-per-line": ["error", "always"],
    /**
     * 禁止属性前有空格，比如 foo. bar()
     * @category Stylistic Issues
     * @fixable
     */
    "no-whitespace-before-property": "error",
    /**
     * 禁止 if 后面不加大括号而写两行代码
     * @category Stylistic Issues
     * @fixable
     */
    "nonblock-statement-body-position": [
      "error",
      "beside",
      {
        "overrides": {
          "while": "below"
        }
      }
    ],
    /**
     * 禁止行尾有空格
     * @category Stylistic Issues
     * @fixable
     */
    "no-trailing-spaces": "error",
    /**
     * 禁止出现超过三行的连续空行
     * @category Stylistic Issues
     * @fixable
     */
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 3,
        "maxEOF": 1,
        "maxBOF": 1
      }
    ],
    /**
     * 禁止混用空格和缩进
     * @category Stylistic Issues
     */
    "no-mixed-spaces-and-tabs": "error",
    /**
     * 函数的参数禁止超过 7 个
     * @category Stylistic Issues
     */
    "max-params": ["error", 7],
    /**
     * 回调函数嵌套禁止超过 3 层，多了请用 async await 替代
     * @category Stylistic Issues
     */
    "max-nested-callbacks": ["error", 3],
    /**
     * jsx 中的属性必须用双引号
     * @category Stylistic Issues
     * @fixable
     */
    "jsx-quotes": ["error", "prefer-double"],
    /**
     * 一个缩进必须用四个空格替代
     * @category Stylistic Issues
     * @fixable
     */
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "flatTernaryExpressions": true
      }
    ],
    /**
     * 逗号前禁止有空格，逗号后必须要有空格
     * @category Stylistic Issues
     * @fixable
     */
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    /**
     * 禁止在行首写逗号
     * @category Stylistic Issues
     * @fixable
     */
    "comma-style": ["error", "last"],
    /**
     * 数组的括号内的前后禁止有空格
     * @category Stylistic Issues
     * @fixable
     */
    "array-bracket-spacing": ["error", "never"],
    /**
     * 代码块如果在一行内，那么大括号内的首尾必须有空格
     * @category Stylistic Issues
     * @fixable
     */
    "block-spacing": ["error", "always"],
    /**
     * 禁止出现没必要的 bind
     * @category Best Practices
     * @fixable
     */
    "no-extra-bind": "error",
    /**
     * 表示小数时，禁止省略 0，比如 .5
     * @category Best Practices
     * @fixable
     */
    "no-floating-decimal": "error",
    /**
     * 禁止在循环内的函数中出现循环体条件语句中定义的变量
     * @category Best Practices
     */
    "no-loop-func": "error",
    /**
     * 循环内必须对循环条件的变量有修改
     * @category Best Practices
     */
    "no-unmodified-loop-condition": "error",
    /**
     * 禁止将自己赋值给自己
     * @category Best Practices
     */
    "no-self-assign": "error",
    /**
     * 禁止将自己与自己比较
     * @category Best Practices
     */
    "no-self-compare": "error",
    /**
     * switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块
     * @category Best Practices
     */
    "no-case-declarations": "error",
    /**
     * if 后面必须要有 {，除非是单行 if
     * @category Best Practices
     * @fixable
     */
    "curly": ["error", "multi-line", "consistent"],
    /**
     * 禁止在 in 或 instanceof 操作符的左侧使用感叹号，如 if (!key in object)
     * @category Possible Errors
     * @fixable
     */
    "no-unsafe-negation": "error",
    /**
     * 禁止将 await 或 yield 的结果做为运算符的后面项
     * @category Possible Errors
     * @reason 这样会导致不符合预期的结果
     */
    "require-atomic-updates": "error",
    /**
     * 必须使用 isNaN(foo) 而不是 foo === NaN
     * @category Possible Errors
     */
    "use-isnan": "error",
    /**
     * 禁止在 return, throw, break 或 continue 之后还有代码
     * @category Possible Errors
     */
    "no-unreachable": "error",
    /**
     * 禁止在 finally 中出现 return, throw, break 或 continue
     * @category Possible Errors
     */
    "no-unsafe-finally": "error",
    /**
     * 禁止在正则表达式中出现连续的空格，必须使用 /foo {3}bar/ 代替
     * @category Possible Errors
     * @fixable
     */
    "no-regex-spaces": "error",
    /**
     * 禁止在数组中出现连续的逗号，如 let foo = [,,]
     * @category Possible Errors
     */
    "no-sparse-arrays": "error",
    /**
     * 禁止正则表达式中使用肉眼无法区分的特殊字符
     * @category Possible Errors
     * @reason 某些特殊字符很难看出差异，最好不要在正则中使用
     */
    "no-misleading-character-class": "error",
    /**
     * 禁止在 RegExp 构造函数中出现非法的正则表达式
     * @category Possible Errors
     */
    "no-invalid-regexp": "error",
    /**
     * 禁止在 if 代码块内出现函数声明
     * @category Possible Errors
     */
    "no-inner-declarations": ["error", "both"],
    /**
     * 定义过的变量必须使用
     * @category Variables
     */
    "no-unused-vars": [
      "off",
      {
        "vars": "all",
        "args": "none",
        "caughtErrors": "none",
        "ignoreRestSiblings": true
      }
    ],
    // --zhaoheng add end-- Its alloyTeam's eslint rules below
    /**
     * 布尔值类型的 propTypes 的 name 必须为 is 或 has 开头
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/boolean-prop-naming": "off",
    /**
     * <button> 必须有 type 属性
     * @category React
     */
    "react/button-has-type": "off",
    /**
     * 一个 defaultProps 必须有对应的 propTypes
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/default-props-match-prop-types": "off",
    /**
     * props state context 必须用解构赋值
     * @category React
     */
    "react/destructuring-assignment": "off",
    /**
     * 组件必须有 displayName 属性
     * @category React
     * @reason 不强制要求写 displayName
     */
    "react/display-name": "off",
    /**
     * 禁止在自定义组件中使用一些指定的 props
     * @category React
     * @reason 没必要限制
     */
    "react/forbid-component-props": "off",
    /**
     * 禁止指定的 props
     * @category React
     */
    "react/forbid-dom-props": "off",
    /**
     * 禁止使用一些指定的 elements
     * @category React
     * @reason 没必要限制
     */
    "react/forbid-elements": "off",
    /**
     * 禁止直接使用别的组建的 propTypes
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/forbid-foreign-prop-types": "off",
    /**
     * 禁止使用一些指定的 propTypes
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/forbid-prop-types": "off",
    /**
     * 禁止在 setState 时使用 this.state
     * @category React
     */
    "react/no-access-state-in-setstate": "off",
    /**
     * 禁止使用数组的 index 作为 key
     * @category React
     * @reason 太严格了
     */
    "react/no-array-index-key": "off",
    /**
     * 禁止使用 dangerouslySetInnerHTML
     * @category React
     * @reason 没必要限制
     */
    "react/no-danger": "off",
    /**
     * 禁止在 componentDidMount 里面使用 setState
     * @category React
     * @reason 同构应用需要在 didMount 里写 setState
     */
    "react/no-did-mount-set-state": "off",
    /**
     * 禁止在一个文件创建两个组件
     * @category React
     * @reason 有一个 bug https://github.com/yannickcr/eslint-plugin-react/issues/1181
     */
    "react/no-multi-comp": "off",
    /**
     * 禁止使用 setState
     * @category React
     * @reason setState 很常用
     */
    "react/no-set-state": "off",
    /**
     * 禁止在函数组件中使用 this
     * @category React
     */
    "react/no-this-in-sfc": "error",
    /**
     * 禁止出现 HTML 中的属性，如 class
     * @category React
     * @fixable
     */
    "react/no-unknown-property": "error",
    /**
     * 禁止使用不安全的生命周期方法 componentWillMount, componentWillReceiveProps, componentWillUpdate
     * @category React
     */
    "react/no-unsafe": "error",
    /**
     * 禁止出现未使用的 propTypes
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/no-unused-prop-types": "off",
    /**
     * 定义过的 state 必须使用
     * @category React
     * @reason 没有官方文档，并且存在很多 bug： https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93
     */
    "react/no-unused-state": "off",
    /**
     * 使用 Flow 时，props 必须设置为只读的
     * @category React
     */
    "react/prefer-read-only-props": "off",
    /**
     * 必须使用 pure function
     * @category React
     * @reason 没必要限制
     */
    "react/prefer-stateless-function": "off",
    /**
     * 组件必须写 propTypes
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/prop-types": "off",
    /**
     * 出现 jsx 的地方必须 import React
     * @category React
     * @reason 已经在 no-undef 中限制了
     */
    "react/react-in-jsx-scope": "off",
    /**
     * 非 required 的 prop 必须有 defaultProps
     * @category React
     * @reason 不强制要求写 propTypes
     */
    "react/require-default-props": "off",
    /**
     * 组件必须有 shouldComponentUpdate
     * @category React
     * @reason 没必要限制
     */
    "react/require-optimization": "off",
    /**
     * 组件内没有 children 时，必须使用自闭和写法
     * @category React
     * @reason 没必要限制
     * @fixable
     */
    "react/self-closing-comp": "off",
    /**
     * 组件内方法必须按照一定规则排序
     * @category React
     * @fixable
     */
    "react/sort-comp": "error",
    /**
     * propTypes 的熟悉必须按照字母排序
     * @category React
     * @reason 没必要限制
     */
    "react/sort-prop-types": "off",
    /**
     * 必须在构造函数中初始化 state
     * @category React
     */
    "react/state-in-constructor": "off",
    /**
     * 类的静态属性必须使用 static 关键字定义
     * @category React
     * @reason use strict会报错 -zhaoheng
     */
    "react/static-property-placement": "off",
    /**
     * 布尔值的属性必须显式的写 someprop={true}
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-boolean-value": "off",
    /**
     * 禁止兄弟元素之间有空格
     * @category JSX-specific
     */
    "react/jsx-child-element-spacing": "off",
    /**
     * 自闭和标签的反尖括号必须与尖括号的那一行对齐
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-closing-bracket-location": [
      "error",
      {
        "nonEmpty": false,
        "selfClosing": "line-aligned"
      }
    ],
    /**
     * 结束标签必须与开始标签的那一行对齐
     * @category JSX-specific
     * @reason 已经在 jsx-indent 中限制了
     * @fixable
     */
    "react/jsx-closing-tag-location": "off",
    /**
     * 禁止 jsx 中使用无用的引号
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-curly-brace-presence": ["error", "never"],
    /**
     * 大括号内前后禁止有空格
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-curly-spacing": [
      "error",
      {
        "when": "never",
        "attributes": {
          "allowMultiline": true
        },
        "children": true,
        "spacing": {
          "objectLiterals": "never"
        }
      }
    ],
    /**
     * props 与 value 之间的等号前后禁止有空格
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-equals-spacing": ["error", "never"],
    /**
     * 限制文件后缀
     * @category JSX-specific
     * @reason 没必要限制
     */
    "react/jsx-filename-extension": "off",
    /**
     * 第一个 prop 必须得换行
     * @category JSX-specific
     * @reason 没必要限制
     * @fixable
     */
    "react/jsx-first-prop-new-line": "off",
    /**
     * 必须使用 React.Fragment 而不是 <></>
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-fragments": ["error", "syntax"],
    /**
     * handler 的名称必须是 onXXX 或 handleXXX
     * @category JSX-specific
     * @reason 没必要限制
     */
    "react/jsx-handler-names": "off",
    /**
     * jsx 的 children 缩进必须为四个空格
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-indent": ["error", 2],
    /**
     * jsx 的 props 缩进必须为四个空格
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-indent-props": ["error", 2],
    /**
     * 限制 jsx 层级
     * @category JSX-specific
     */
    "react/jsx-max-depth": "off",
    /**
     * 限制每行的 props 数量
     * @category JSX-specific
     * @reason 没必要限制
     * @fixable
     */
    "react/jsx-max-props-per-line": "off",
    /**
     * jsx 中禁止使用 bind
     * @category JSX-specific
     * @reason 太严格了
     */
    "react/jsx-no-bind": "off",
    /**
     * 禁止在 jsx 中出现字符串
     * @category JSX-specific
     * @reason 没必要限制
     */
    "react/jsx-no-literals": "off",
    /**
     * 禁止使用 target="_blank"
     * @category JSX-specific
     * @reason 没必要限制
     */
    "react/jsx-no-target-blank": "off",
    /**
     * 禁止有内容的元素写在一行内
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-one-expression-per-line": "off",
    /**
     * 禁止出现多于的空格
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-props-no-multi-spaces": "error",
    /**
     * 禁止使用 {...props}
     * @category JSX-specific
     */
    "react/jsx-props-no-spreading": "off",
    /**
     * defaultProps 必须按字母排序
     * @category JSX-specific
     */
    "react/jsx-sort-default-props": "off",
    /**
     * props 必须排好序
     * @category JSX-specific
     * @reason 没必要限制
     * @fixable
     */
    "react/jsx-sort-props": "off",
    /**
     * jsx 的开始和闭合处禁止有空格
     * @category JSX-specific
     * @fixable
     */
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never"
      }
    ],
    /**
     * 多行的 jsx 必须有括号包起来
     * @category JSX-specific
     * @reason 没必要限制
     * @fixable
     */
    "react/jsx-wrap-multilines": "off",
    /**
     * 数组中的 jsx 必须有 key
     */
    "react/jsx-key": "error",
    /**
     * 禁止在 jsx 中使用像注释的字符串
     */
    "react/jsx-no-comment-textnodes": "error",
    /**
     * 禁止出现重复的 props
     */
    "react/jsx-no-duplicate-props": "error",
    /**
     * 禁止使用未定义的 jsx elemet
     */
    "react/jsx-no-undef": "error",
    /**
     * 禁止使用 pascal 写法的 jsx，比如 <TEST_COMPONENT>
     */
    //"react/jsx-pascal-case": "error",
    /**
     * jsx 文件必须 import React
     */
    "react/jsx-uses-react": "error",
    /**
     * 定义了的 jsx element 必须使用
     */
    "react/jsx-uses-vars": "error",
    /**
     * 禁止使用 children 做 props
     */
    "react/no-children-prop": "error",
    /**
     * 禁止在使用了 dangerouslySetInnerHTML 的组建内添加 children
     */
    "react/no-danger-with-children": "error",
    /**
     * 禁止使用已废弃的 api
     */
    "react/no-deprecated": "error",
    /**
     * 禁止在 componentDidUpdate 里面使用 setState
     */
    "react/no-did-update-set-state": "error",
    /**
     * 禁止直接修改 this.state
     */
    "react/no-direct-mutation-state": "error",
    /**
     * 禁止使用 findDOMNode
     */
    "react/no-find-dom-node": "error",
    /**
     * 禁止使用 isMounted
     */
    "react/no-is-mounted": "error",
    /**
     * 禁止在 PureComponent 中使用 shouldComponentUpdate
     */
    "react/no-redundant-should-component-update": "error",
    /**
     * 禁止使用 ReactDOM.render 的返回值
     */
    "react/no-render-return-value": "error",
    /**
     * 禁止使用字符串 ref
     */
    "react/no-string-refs": "error",
    /**
     * 禁止拼写错误
     */
    "react/no-typos": "error",
    /**
     * 禁止在组件的内部存在未转义的 >, ", " 或 }
     */
    "react/no-unescaped-entities": "error",
    /**
     * 禁止在 componentWillUpdate 中使用 setState
     */
    "react/no-will-update-set-state": "error",
    /**
     * 必须使用 Class 的形式创建组件
     */
    "react/prefer-es6-class": ["error", "always"],
    /**
     * render 方法中必须有返回值
     */
    "react/require-render-return": "error",
    /**
     * style 属性的取值必须是 object
     */
    "react/style-prop-object": "error",
    /**
     * HTML 中的自闭和标签禁止有 children
     */
    "react/void-dom-elements-no-children": "error"
  }
}
